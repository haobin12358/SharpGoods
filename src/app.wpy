<style scoped lang="less" rel="stylesheet/less">
  @import 'styles/common';
page{
    width: 100%;
    height: 100%;
}
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
  background-color: #f8f8f8;
  font-size: 30rpx;
}

</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'

  import { setStore } from 'wepy-redux'
  import configStore from './store'

  const store = configStore()
  setStore(store)

  export default class extends wepy.app {
    config = {
      pages: [
        'pages/index',
        'pages/login',
        'pages/register',
        'pages/myOrder',
        'pages/oneOrder',
        'pages/personal',
        'pages/placeAnOrder',
        'pages/business',
        'pages/commodityDetails',
        'pages/commodityEvaluation',
        'pages/product',
        'pages/car',
        'pages/baseInfo',
        'pages/setUp',
        'pages/commodityIndex',
        'pages/address'
      ],
      window: {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#e5473c',
        navigationBarTitleText: 'WeChat',
        navigationBarTextStyle: 'white'
      },
      "tabBar": {
        "color": "#bfbfbf",
        "selectedColor": "#e5473c",
        "backgroundColor": "#ffffff",
        "borderStyle": "black",
        "list": [{
          "pagePath": "pages/index",
          "text": "首页",
          "iconPath": "images/index.png",
          "selectedIconPath": "images/index_selected.png"
        }, {
          "pagePath": "pages/car",
          "text": "购物车",
          "iconPath": "images/shop.png",
          "selectedIconPath": "images/shop_selected.png"
        },
          {
            "pagePath": "pages/personal",
            "text": "我的",
            "iconPath": "images/mine.png",
            "selectedIconPath": "images/mine_selected.png"
          }]
      }
    }

    globalData = {
      userInfo: null,

    }

    constructor () {
      super()
      this.use('requestfix')
      this.use('promisify')
    }

    onLaunch() {
      this.testAsync()
    }

    sleep (s) {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve('promise resolved')
        }, s * 1000)
      })
    }

    async testAsync () {
      const data = await this.sleep(3)
      console.log(data)
    }

    getUserInfo(cb) {
      const that = this
      if (this.globalData.userInfo) {
        return this.globalData.userInfo
      }
      wepy.getUserInfo({
        success (res) {
          that.globalData.userInfo = res.userInfo
          cb && cb(res.userInfo)
        }
      })
    }
  }
</script>
